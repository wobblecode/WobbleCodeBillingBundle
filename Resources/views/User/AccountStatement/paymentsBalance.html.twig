{% extends 'WobbleCodeBillingBundle::layout.html.twig' %}

{% block app_content_title %}
  {{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.title'|trans }}
{% endblock %}

{% block app_content_content %}
{% if entities %}
<div class="row">
  <div class="col-md-4 col-md-push-8">
    <!--
    <ul class="list-group list-flat">
      <li class="list-group-item list-title">
        <h5>{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.summarize.groups.title'|trans }}</h5>
      </li>
      <li class="list-group-item">
        {{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.summarize.groups.groupA'|trans }}
        <span class="badge badge-default">1000</span>
      </li>
    </ul>
    -->
    <div class="summarize-box primary summarize-corner">
      <h2>{{ available|number_format(2, ',', '.') }} €</h2>
      <p>{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.summarize.box.total'|trans }}</p>
    </div>

    <a class="btn btn-primary btn-block mb"><i class="fa fa-plus fa-fw"></i> Withdraw Funds</a>
  </div>

  <div class="col-md-8 col-md-pull-4">
    <div class="row crud-controls">
      <div class="col-sm-7 col-group">
        <ul id="datagrid-group" class="nav nav-pills nav-md-stacked">
          <li class="active">
            <a href="#success" data-filter="searchFilter" data-query="">
            <span data-datagrid-count="all" class="badge badge-default pull-right">0</span>
            {{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.filter.pill.all'|trans }}
            </a>
          </li>
          <!--
          <li>
            <a href="#success" data-filter="searchFilter" data-query="success">
            <span data-datagrid-count="success" class="badge badge-default pull-right">0</span>
            {{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.filter.pill.success'|trans }}
            </a>
          </li>
          -->
        </ul>
      </div>
      <div class="col-sm-5 col-group text-right">
        <button class="btn btn-default" data-toggle="collapse" data-target="#search-filters">
          <i class="fa fa-search"></i>
          {{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.button.search'|trans }}
        </button>
      </div>
    </div>

    <div id="search-filters" class="collapse">
      <div class="row mt">
        <div id="datetime-picker-start-container" class="col-sm-6 col-group">
          <div id="datetime-picker-start" class="input-group datetimepicker">
            <span class="input-group-addon addon-icon compact"><i class="fa fa-calendar"></i></span>
            <input data-format="dd-MM-yyyy" type="text" class="form-control">
          </div>
        </div>
        <div id="datetime-picker-end-container" class="col-sm-6 col-group">
          <div id="datetime-picker-end" class="input-group datetimepicker">
            <span class="input-group-addon addon-icon compact"><i class="fa fa-calendar"></i></span>
            <input data-format="dd-MM-yyyy" type="text" class="form-control">
          </div>
        </div>
      </div>
      <div class="datagrid-filter-multi hmt"></div>
    </div>


    <div class="datagrid mt">
      <div class="grid"></div>
      <div class="text-center" id="pagination"></div>
    </div>

  </div>
</div>
{% else %}
<div class="row mt">
  <div class="col-sm-8 col-sm-push-2 text-center">
    <p class="lead mt">{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.noItems'|trans }}</p>
    <div class="btn-xs-block">
      <a href="{{ path("billing_payment-profile_create") }}" class="btn btn-lg btn-primary">
        <i class="fa fa-plus fa-fw"></i>
        {{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.button.suggestion'|trans }}
      </a>
    </div>
    <small class="text-muted">{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.message.suggestion'|trans }}</small>
  </div>
</div>
{% endif %}
{% endblock %}

{% block import_scripts %}
{{ parent() }}
<script type="text/javascript">

  /**
   * Entity Model
   * @type {Backbone.Model}
   */
  var BasicCrud = Backbone.Model.extend({
    parse: function(response, xhr) {
      response.effective_atObj = new Date(response.effective_at);
      return response;
    }
  });

  /**
   * Collection wrapped by pageable
   * @type {Backbone.PageableCollection}
   */
  var BasicCrud = Backbone.PageableCollection.extend({
    model: BasicCrud,
    url: "{{ url("billing_account_payments_balance") }}",
    mode: 'client',
    parse: function(response, xhr) {
      return response.entities;
    },
    state: {
      pageSize: 20
    }
  });

  var basicCrud = new BasicCrud();

  /**
   * Datagrid colums definitions
   * @type {Array}
   */
  var columns = [
    {
      name: "id",
      label: "{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.grid.id.label'|trans }}",
      editable: false,
      cell: Backgrid.IntegerCell.extend({
        orderSeparator: '',
        className: 'integer-cell cell-left col-generic-id col-id'
      })
    },
    {
      name: "effective_at",
      label: "{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.grid.effectiveAt.label'|trans }}",
      editable: false,
      cell: Backgrid.DateCell.extend({
        orderSeparator: '',
        className: 'integer-cell cell-left col-generic-date col-effective_at'
      })
    },
    {
      name: "title",
      label: "{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.grid.title.label'|trans }}",
      editable: false,
      cell: Backgrid.StringCell.extend({
        orderSeparator: '',
        className: 'string-cell cell-left col-title'
      })
    },
    {
      name: "amount",
      label: "{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.grid.amount.label'|trans }}",
      editable: false,
      cell: Backgrid.MoneyCell.extend({
        className: 'number-col col-amount col-generic-amount col-money'
      }),
      headerCell: Backgrid.HeaderCell.extend({
        tagName: 'th class="number-col col-amount"'
      })
    },
    {
      name: "actions",
      label: "{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.grid.actions.label'|trans }}",
      editable: false,
      cell: Backgrid.StringCell.extend({
        className: 'cell-actions',
        template: _.template('<a href="<%= route_show %>"><span class="fa fa-eye btn-icon-left"></span></a>'),
        render: function () {
          this.model.attributes.route_show = Routing.generate( 'billing_account_payments_balance', { id: this.model.attributes.id });
          this.$el.html(this.template(this.model.attributes));
          return this;
        }
      }),
      headerCell: Backgrid.HeaderCell.extend({
        tagName: 'th class="cell-actions col-generic-actions col-actions"'
      })
    }
    ];

  /**
   * DataGrid Setup
   * @type {Backgrid.Grid}
   */
  var grid = new Backgrid.Grid({
    columns: columns,
    collection: basicCrud,
    className: 'table table-striped datagrid'
  });

  /**
   * Setup Pagination extension
   * @type {Backgrid.Extension.Pagination}
   */
  var pagination = new Backgrid.Extension.Paginator({
    collection: basicCrud,
    className: 'datagrid-pagination'
  })

  /**
   * ClientSideFilterMulti definition
   * @type {Backgrid.Extension.ClientSideFilterMulti}
   */
  var searchFilter = new Backgrid.Extension.ClientSideFilterMulti({
    collection: basicCrud.fullCollection,
    wait: 60,
    placeholder: "{{ 'WobbleCodeBilling.view.User.AccountStatement.paymentsBalance.filter.input.placeholder'|trans }}",
    template: _.template('<form class="<%= className %>"><div class="input-group"><input type="text" class="form-control" placeholder="<%= placeholder %>"><span class="input-group-addon addon-icon compact"><i class="fa fa-search"></i></span></div></form>'),
    className: '',
    filters: [
      {
        name: 'date',
        type: 'date',
        start: new Date(2013, 5, 20),
        end: new Date(2013, 7, 20),
        field: 'effective_at'
      },{
        name: 'pills',
        type: 'regexp',
        query: '',
        placeholders: false,
        fields: ['type']
      },{
        name: 'default',
        type: 'regexp',
        query: '',
        placeholders: ['id', 'public_reference'],
        fields: ['id', 'title']
      }
    ]
  });

  $(".datagrid-filter-multi").append(searchFilter.render().$el)

  /** Append views */
  $(".grid").append(grid.render().$el);
$("#pagination").append(pagination.render().el);
  /** Fetch data */
  basicCrud.fetch({reset: true});

  /** On Select events */
  basicCrud.on('backgrid:select backgrid:selected', function () {});

/** Bind group pills */
  $('#datagrid-group a').on('click', function() {
    $this = $(this);
    $this.parent().siblings().removeClass('active');
    $this.parent().addClass('active');
    var query = $this.attr('data-query');
    searchFilter.runSearch(1, query);
  })
/** DateTime */
  $('#datetime-picker-start').datetimepicker({
    pickTime: false,
    appendTo: '#datetime-picker-start-container'
  }).on('changeDate', function(e) {
    searchFilter.runSearch(0, {
      start: e.date,
      end: searchFilter.filters[0].end
    });
  });

  $('#datetime-picker-end').datetimepicker({
    pickTime: false,
    appendTo: '#datetime-picker-end-container'
  }).on('changeDate', function(e) {
    searchFilter.runSearch(0, {
      start: searchFilter.filters[0].start,
      end: e.date
    });
  });

  $('.datetimepicker').click(function (e) {
    $(this).datetimepicker('show');
  });
</script>
{% endblock %}
