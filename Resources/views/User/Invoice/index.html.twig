{% extends 'WobbleCodeBillingBundle::layout.html.twig' %}

{% block app_content_title %}
  {{ 'WobbleCodeBilling.view.User.Invoice.index.title'|trans }}
{% endblock %}

{% block head_inline_styles %}
{{ parent() }}
<style type="text/css">

  .select-all-header-cell {
    width: 36px;
  }

  .col-id {
    width: 54px !important;
  }

  .col-date {
    width: 110px;
    text-align: left;
  }

  .col-amount {
    width: 90px;
  }

  .col-actions, .cell-actions {
    width: 130px;
    text-align: right;
  }

  .cell-actions a:hover {
    text-decoration: none;
  }

</style>
{% endblock %}

{% block app_content_content %}
{% if entities %}
<div class="row">
  <div class="col-md-4 col-md-push-8">
    <!--
    <ul class="list-group list-flat">
      <li class="list-group-item list-title">
        <h5>{{ 'WobbleCodeBilling.view.User.Invoice.index.summarize.groups.title'|trans }}</h5>
      </li>
      <li class="list-group-item">
        {{ 'WobbleCodeBilling.view.User.Invoice.index.summarize.groups.groupA'|trans }}
        <span class="badge badge-default">1000</span>
      </li>
    </ul>
    -->
    <div class="summarize-box primary summarize-corner">
      <h2>0</h2>
      <p>{{ 'WobbleCodeBilling.view.User.Invoice.index.summarize.box.total'|trans }}</p>
    </div>
  </div>

  <div class="col-md-8 col-md-pull-4">
    <div class="row crud-controls">
      <div class="col-sm-10 col-group">
        <ul id="datagrid-group" class="nav nav-pills nav-md-stacked">
          <li class="active">
            <a href="#all" data-filter="searchFilter" data-query="">
            <span data-datagrid-count="all" class="badge badge-default pull-right">0</span>
            {{ 'WobbleCodeBilling.view.User.Invoice.index.filter.pill.all'|trans }}
            </a>
          </li>
          <li>
            <a href="#received" data-filter="searchFilter" data-query="received">
            <span data-datagrid-count="received" class="badge badge-default pull-right">0</span>
            {{ 'WobbleCodeBilling.view.User.Invoice.index.filter.pill.received'|trans }}
            </a>
          </li>
          <li>
            <a href="#issued" data-filter="searchFilter" data-query="issued">
            <span data-datagrid-count="issued" class="badge badge-default pull-right">0</span>
            {{ 'WobbleCodeBilling.view.User.Invoice.index.filter.pill.issued'|trans }}
            </a>
          </li>
        </ul>
      </div>
      <div class="col-sm-2 col-group text-right">
        <button class="btn btn-default" data-toggle="collapse" data-target="#search-filters">
          <i class="fa fa-search"></i>
          {{ 'WobbleCodeBilling.view.User.Invoice.index.button.search'|trans }}
        </button>
      </div>
    </div>

    <div id="search-filters" class="collapse">
      <div class="row mt">
        <div id="datetime-picker-start-container" class="col-sm-6 col-group">
          <div id="datetime-picker-start" class="input-group datetimepicker">
            <span class="input-group-addon addon-icon compact"><i class="fa fa-calendar"></i></span>
            <input data-format="dd-MM-yyyy" type="text" class="form-control">
          </div>
        </div>
        <div id="datetime-picker-end-container" class="col-sm-6 col-group">
          <div id="datetime-picker-end" class="input-group datetimepicker">
            <span class="input-group-addon addon-icon compact"><i class="fa fa-calendar"></i></span>
            <input data-format="dd-MM-yyyy" type="text" class="form-control">
          </div>
        </div>
      </div>
      <div class="datagrid-filter-multi hmt"></div>
    </div>


    <div class="datagrid mt">
      <div class="grid"></div>
      <div class="text-center" id="pagination"></div>
    </div>

  </div>
</div>
{% else %}
<div class="row mt">
  <div class="col-sm-8 col-sm-push-2 text-center">
    <p class="lead mt">{{ 'WobbleCodeBilling.view.User.Invoice.index.noItems'|trans }}</p>
  </div>
</div>
{% endif %}
{% endblock %}

{% block import_scripts %}
{{ parent() }}

{% if entities %}
<script type="text/javascript">

  /**
   * Entity Model
   * @type {Backbone.Model}
   */
  var BasicCrud = Backbone.Model.extend({
    parse: function(response, xhr) {
      response.timeObj = new Date(response.time);
      return response;
    }
  });

  /**
   * Collection wrapped by pageable
   * @type {Backbone.PageableCollection}
   */
  var BasicCrud = Backbone.PageableCollection.extend({
    model: BasicCrud,
    url: "{{ url("billing_invoice") }}",
    mode: 'client',
    parse: function(response, xhr) {
      return response.entities;
    },
    state: {
      pageSize: 30
    }
  });

  var basicCrud = new BasicCrud();

  /**
   * GroupCounts
   * @param {Backbone.View}
   */
  GroupCounts = Backbone.View.extend({
    loaded: false,
    all: 0,
    issued: 0,
    received: 0,
    allTotal: 0,
    issuedTotal: 0,
    receivedTotal: 0,

    initialize: function () {
      this.listenTo(this.collection, 'add', this.render);
      this.listenTo(this.collection, 'remove', this.render);
      this.listenTo(this.collection, 'reset', this.render);
    },

    render: function () {

      var groupCount = _.countBy(
        this.collection.models,
        function (d) {return d.get('type');
      });

      if (this.loaded === false) {
        this.loaded        = true;
        this.allTotal      = this.collection.length;
        this.receivedTotal = (groupCount.received) ? groupCount.received : 0;
        this.issuedTotal   = (groupCount.issued) ? groupCount.issued : 0;
      }

      this.all      = this.collection.length;
      this.received = (groupCount.received) ? groupCount.received : 0;
      this.issued   = (groupCount.issued) ? groupCount.issued : 0;


      var setCount = function (target, context) {
        var data;

        if (context[target] != context[target + 'Total'] && false) {
          data = context[target] + ' / ' + context[target + 'Total'];
        } else {
          data = context[target];
        }

        $("[data-datagrid-count='" + target + "']").text(data);
      };

      setCount('all', this);
      setCount('received', this);
      setCount('issued', this);
    }
  });

  /**
   * Setup Counters
   * @type {GroupCounts}
   */
  var groupCounts = new GroupCounts({
    collection: basicCrud.fullCollection
  });

  /**
   * Datagrid colums definitions
   * @type {Array}
   */
  var columns = [
    {
      name: "",
      cell: Backgrid.Extension.SelectRowCellCustom,
      headerCell: Backgrid.Extension.SelectAllHeaderCellCustom
    },
    {
      name: "issued_at",
      label: "{{ 'WobbleCodeBilling.view.User.Invoice.index.grid.issuedAt.label'|trans }}",
      editable: false,
      cell: Backgrid.DateCell.extend({
        orderSeparator: '',
        className: 'integer-cell cell-left col-date',
        render: function () {
          this.$el.empty();
          var model = this.model;
          if (model.get('issued_at')) {
            this.$el.text(this.formatter.fromRaw(model.get('issued_at'), model));
          } else {
            this.$el.html('<span class="text-muted">n/a</span>');
          }
          this.delegateEvents();
          return this;
        },
      }),
      headerCell: Backgrid.HeaderCell.extend({
        tagName: 'th class="col-date"'
      })
    },
    {
      name: "reference",
      label: "{{ 'WobbleCodeBilling.view.User.Invoice.index.grid.reference.label'|trans }}",
      editable: false,
      cell: Backgrid.StringCell.extend({
        orderSeparator: '',
        className: 'string-cell cell-left col-reference'
      })
    },
    {
      name: "total",
      label: "{{ 'WobbleCodeBilling.view.User.Invoice.index.grid.total.label'|trans }}",
      editable: false,
      cell: Backgrid.MoneyCell.extend({
        className: 'number-col col-amount col-generic-amount col-total'
      }),
      headerCell: Backgrid.HeaderCell.extend({
        tagName: 'th class="number-col col-amount"'
      })
    },
    {
      name: "totalWithTaxes",
      label: "{{ 'WobbleCodeBilling.view.User.Invoice.index.grid.totalWithTaxes.label'|trans }}",
      editable: false,
      cell: Backgrid.MoneyCell.extend({
        className: 'number-col col-amount col-generic-amount col-money'
      }),
      headerCell: Backgrid.HeaderCell.extend({
        tagName: 'th class="number-col col-amount"'
      })
      },
      {
      name: "actions",
      label: "{{ 'WobbleCodeBilling.view.User.Invoice.index.grid.actions.label'|trans }}",
      editable: false,
      cell: Backgrid.StringCell.extend({
        className: 'cell-actions',
        template: _.template('<a href="<%= route_show %>" target="_blank"><i class="fa fa-file-text-o"></i> html</a> &nbsp; <a href="<%= route_pdf %>"><i class="fa fa-file-text-o"></i> pdf</a>'),
        render: function () {

          this.model.attributes.route_show = Routing.generate( 'open_billing_invoice_show_html', { hash: this.model.attributes.hash });
          this.model.attributes.route_pdf = Routing.generate( 'open_billing_invoice_show_pdf', { hash: this.model.attributes.hash });
          this.$el.html(this.template(this.model.attributes));
          return this;
        }
      }),
      headerCell: Backgrid.HeaderCell.extend({
        tagName: 'th class="col-actions"'
      })
    }
      ];

  /**
   * DataGrid Setup
   * @type {Backgrid.Grid}
   */
  var grid = new Backgrid.Grid({
    columns: columns,
    collection: basicCrud,
    className: 'table table-striped datagrid'
  });

  /**
   * Setup Pagination extension
   * @type {Backgrid.Extension.Pagination}
   */
  var pagination = new Backgrid.Extension.Paginator({
    collection: basicCrud,
    className: 'datagrid-pagination'
  })

  /**
   * ClientSideFilterMulti definition
   * @type {Backgrid.Extension.ClientSideFilterMulti}
   */
  var searchFilter = new Backgrid.Extension.ClientSideFilterMulti({
    collection: basicCrud.fullCollection,
    wait: 60,
    placeholder: "{{ 'WobbleCodeBilling.view.User.Invoice.index.filter.input.placeholder'|trans }}",
    template: _.template('<form class="<%= className %>"><div class="input-group"><input type="text" class="form-control" placeholder="<%= placeholder %>"><span class="input-group-addon addon-icon compact"><i class="fa fa-search"></i></span></div></form>'),
    className: '',
    filters: [
      {
        name: 'date',
        type: 'date',
        start: new Date(2013, 5, 20),
        end: new Date(2013, 7, 20),
        field: 'timeObj'
      },{
        name: 'pills',
        type: 'regexp',
        query: '',
        placeholders: false,
        fields: ['type']
      },{
        name: 'default',
        type: 'regexp',
        query: '',
        placeholders: ['id'],
        fields: ['id']
      }
    ]
  });

  $(".datagrid-filter-multi").append(searchFilter.render().$el)

  /** Append views */
  $(".grid").append(grid.render().$el);
  $("#pagination").append(pagination.render().el);

  /** Fetch data */
  basicCrud.fetch({reset: true});

  /** On Select events */
  basicCrud.on('backgrid:select backgrid:selected', function () {});

/** Bind group pills */
  $('#datagrid-group a').on('click', function() {
    $this = $(this);
    $this.parent().siblings().removeClass('active');
    $this.parent().addClass('active');
    var query = $this.attr('data-query');
    searchFilter.runSearch(1, query);
  })
/** DateTime */
  $('#datetime-picker-start').datetimepicker({
    pickTime: false,
    appendTo: '#datetime-picker-start-container'
  }).on('changeDate', function(e) {
    searchFilter.runSearch(0, {
      start: e.date,
      end: searchFilter.filters[0].end
    });
  });

  $('#datetime-picker-end').datetimepicker({
    pickTime: false,
    appendTo: '#datetime-picker-end-container'
  }).on('changeDate', function(e) {
    searchFilter.runSearch(0, {
      start: searchFilter.filters[0].start,
      end: e.date
    });
  });

  $('.datetimepicker').click(function (e) {
    $(this).datetimepicker('show');
  });
</script>
{% endif %}
{% endblock %}
